{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "version": "PLCN_v1",
        "update_url": "https:\/\/github.com\/pelican-dev\/panel\/raw\/main\/database\/Seeders\/eggs\/source-engine\/egg-custom-source-engine-game.json"
    },
    "exported_at": "2025-03-18T12:36:07+00:00",
    "name": "Custom Source Engine Game",
    "author": "panel@example.com",
    "uuid": "2a42d0c2-c0ba-4067-9a0a-9b95d77a3490",
    "description": "This option allows modifying the startup arguments and other details to run a custom SRCDS based game on the panel.",
    "tags": [
        "source",
        "steamcmd"
    ],
    "features": [
        "steam_disk_space"
    ],
    "docker_images": {
        "ghcr.io\/parkervcp\/games:source": "ghcr.io\/parkervcp\/games:source"
    },
    "file_denylist": [],
    "startup": ".\/srcds_run -game {{SRCDS_GAME}} -console -port {{SERVER_PORT}} +map {{SRCDS_MAP}} +ip 0.0.0.0 -strictportbind -norestart",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"gameserver Steam ID\"\r\n}",
        "logs": "{}",
        "stop": "quit"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n\r\n##\r\n#\r\n# Variables\r\n# STEAM_USER, STEAM_PASS, STEAM_AUTH - Steam user setup. If a user has 2fa enabled it will most likely fail due to timeout. Leave blank for anon install.\r\n# WINDOWS_INSTALL - if it's a windows server you want to install set to 1\r\n# SRCDS_APPID - steam app id ffound here - https:\/\/developer.valvesoftware.com\/wiki\/Dedicated_Servers_List\r\n# EXTRA_FLAGS - when a server has extra glas for things like beta installs or updates.\r\n#\r\n##\r\n\r\n\r\n## just in case someone removed the defaults.\r\nif [ \"${STEAM_USER}\" == \"\" ]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\nmkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd \/mnt\/server\/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\n## install game using steamcmd\r\n.\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) +app_update ${SRCDS_APPID} ${EXTRA_FLAGS} validate +quit ## other flags may be needed depending on install. looking at you cs 1.6\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so",
            "container": "ghcr.io\/parkervcp\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Game ID",
            "description": "The ID corresponding to the game to download and run using SRCDS.",
            "env_variable": "SRCDS_APPID",
            "default_value": "",
            "user_viewable": true,
            "user_editable": false,
            "rules": [
                "required",
                "numeric",
                "digits_between:1,6"
            ],
            "sort": 1
        },
        {
            "name": "Game Name",
            "description": "The name corresponding to the game to download and run using SRCDS.",
            "env_variable": "SRCDS_GAME",
            "default_value": "",
            "user_viewable": true,
            "user_editable": false,
            "rules": [
                "required",
                "alpha_dash",
                "between:1,100"
            ],
            "sort": 2
        },
        {
            "name": "Map",
            "description": "The default map for the server.",
            "env_variable": "SRCDS_MAP",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "alpha_dash"
            ],
            "sort": 3
        },
        {
            "name": "Steam Username",
            "description": "",
            "env_variable": "STEAM_USER",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ],
            "sort": 4
        },
        {
            "name": "Steam Password",
            "description": "",
            "env_variable": "STEAM_PASS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ],
            "sort": 5
        },
        {
            "name": "Steam Auth",
            "description": "",
            "env_variable": "STEAM_AUTH",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ],
            "sort": 6
        }
    ]
}