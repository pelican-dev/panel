name: Lint

on:
  pull_request:
    branches:
      - '**'

jobs:
  pint:
    name: Pint
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: bcmath, curl, gd, mbstring, mysql, openssl, pdo, tokenizer, xml, zip
          tools: composer:v2
          coverage: none

      - name: Setup .env
        run: cp .env.example .env

      - name: Install dependencies
        run: composer install --no-interaction --no-suggest --no-progress --no-autoloader --no-scripts

      - name: Pint
        run: vendor/bin/pint --test
  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [8.2, 8.3, 8.4]
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Get cache directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php }}-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: bcmath, curl, gd, mbstring, mysql, openssl, pdo, tokenizer, xml, zip
          tools: composer:v2
          coverage: none

      - name: Setup .env
        run: cp .env.example .env

      - name: Install dependencies
        run: composer install --no-interaction --no-suggest --no-progress --no-scripts

      - name: PHPStan
        run: vendor/bin/phpstan --memory-limit=-1